    1  ls
    2  ls -a
    3  pwd
    4  ls
    5  echo "Hello Team"
    6  echo "Hello Team" >> file1.txt
    7  ls
    8  cat file1.txt
    9  echo "Hello Team" >> file2.txt
   10  ls
   11  clear
   12  ls
   13  echo "record two" >> file1.txt
   14  cat file1.txt
   15  echo "record two" >> file1.txt
   16  cat file1.txt
   17  echo "record two" >> file1.txt
   18  cat file1.txt
   19  echo "Record1" > file1.txt
   20  cat file1.txt
   21  echo "Record1" > file1.doc
   22  cat file1.doc
   23  ls -a
   24  cd /etc
   25  ls
   26  cd ~
   27  clear
   28  ls
   29  cat file2.txt
   30  pwd
   31  ls
   32  mkdir dir1
   33  ls
   34  cd dir1/
   35  pwd
   36  ls
   37  clear
   38  ls
   39  pwd
   40  cd ..
   41  pwd
   42  ls
   43  cd dir1/
   44  ls
   45  echo >> s1.txt
   46  echo >> s2.txt
   47  echo >> s3.txt
   48  echo >> s4.txt
   49  ls
   50  pwd
   51  mkdir sdir1
   52  ls
   53  cat s1.txt
   54  mkdir sdir2
   55  ls
   56  cd dir1
   57  cd sdir1
   58  pwd
   59  cd ..
   60  clear
   61  ls
   62  echo "rec1" > s1.txt
   63  cat s1.txt
   64  pwd
   65  ls
   66  cp s1.txt sdir1
   67  ls
   68  cd sdir1/
   69  ls
   70  cd ..
   71  cd sdir1
   72  cd ..
   73  ls
   74  cd sdir2/
   75  ls
   76  cd ..
   77  ls
   78  mv s2.txt sdir2/
   79  ls
   80  cd sdir2/
   81  ls
   82  clear
   83  ls
   84  mv s2.txt abc.doc
   85  ls
   86  mv abc.doc abc.doc
   87  clear
   88  ls
   89  rm abc.doc
   90  ls
   91  pwd
   92  ls
   93  echo "rec1" >> q1.txt
   94  ls
   95  rm q1.txt
   96  ls
   97  echo "rec1" >> w1.txt
   98  ls
   99*
  100  ls
  101  clear
  102  ls
  103  echo "rec1" >> s1.txt
  104  echo "rec1" >> s2.txt
  105  echo "rec1" >> s3.txt
  106  echo "rec1" >> w1.txt
  107  echo "rec1" >> q1.txt
  108  echo "rec1" >> dq1.txt
  109  ls
  110  rm -f s2.txt s3.txt
  111  ls
  112  rm -f
  113  ls
  114  clear
  115  ls
  116  echo "REC" >> q1.doc
  117  echo "REC" >> q2.doc
  118  echo "REC" >> q2.java
  119  echo "REC" >> q4.java
  120  ls
  121  rm -f *.doc
  122  ls
  123  cd ..
  124  ls
  125  rm sdir1/
  126  rm -r sdir1/
  127  y
  128  clear
  129  ls
  130  mkdir dummydir1
  131  ls
  132  rm -rf dummydir1/
  133  ls
  134  mkdir dummydir2
  135  ls
  136  cd dummydir2/
  137  touch f1.txt
  138  ls
  139  cat f1.txt
  140  ls
  141  cd ..
  142  s
  143  ls
  144  r
  145  clear
  146  ls
  147  rm -f dummydir2/
  148  clear
  149  rm -r dummydir2/
  150  ls
  151  mkdir dummydir3
  152  ls
  153  cd dummydir3/
  154  ls
  155  touch f1.txt
  156  touch f2.txt
  157  touch f3.txt
  158  ls
  159  pwd
  160  cd ..
  161  pwd
  162  ls
  163  rm -rf dummydir3/
  164  ls
  165  history
  166  clear
  167  clear
  168  ls
  169  pwd
  170  cd ..
  171  ls
  172  mkdir dir2
  173  cd dir
  174  cd dir1/
  175  ls
  176  pwd
  177  ls
  178  cd ..
  179  ls
  180  pwd
  181  cd dir1/
  182  ls
  183  mv *.txt dir2
  184  ls
  185  pwd
  186  mv *.txt /root/dir2/
  187  ls
  188  cd ..
  189  ls
  190  cd dir2/
  191  ls
  192  history



***************
28th Apr. 2023
***************
	Roles & Responsibilities :::

	- Linux Administration --> 

		Manage Files and Directories
		Install & Manage DevOps Tools & Services
		Manage Users		
		Manage the Authentication & Authorization
			Types of Authentication ::
				Password based Auth.
				Token based Auth.
				Key Based Auth.
				Passwordless Auth.
		Manage the Remote Servers
		Manage the credentials
		Manage the Backup and Recovery
		Shell Scripting


	user1 -- dev_group
	user2 -- dev_group
	user3 -- test_group


	user1		--> 	created file1.txt
	user1		--> 	created copy1.sh
	user1		--> 	created dir1

ll
-rw-r--r--
-rwxr-xr-x
drwxr-xr-x

chmod ==> 

	How to create Linux Users
		adduser user1
	Login to user accnt
		su - user1


	Create User 
	Create password	
		passwd <username> 
	Create SSH Keys ==> public & Private key == id_rsa.pub & id_rsa
		ssh-keygen


[devopsadmin@ip-172-31-5-205 .ssh]$ history
    1  clear
    2  pwd
    3  ls
    4  ls -a
    5  exit
    6  clear
    7  ls
    8  ls -a
    9  ssh-keygen
   10  ls -a
   11  cd .ssh/
   12  ll
   13  cat id_rsa.pub
   14  cat id_rsa
   15  history

  267  clear
  268  cd /home/ec2-user/
  269  ls
  270  ll
  271  cat f1.txt
  272  exit
  273  pwd
  274  exit
  275  clear
  276  cd /home/
  277  ls
  278  cat /etc/passwd
  279   clear
  280  cd ~
  281  clear
  282  useradd -m -d /home/linuxadmindir linuxadminuser
  283  cd /home/
  284  ls
  285  ll
  286  useradd user1
  287  ll
  288  clear
  289  ll
  290  su - linuxadminuser
  291  exit
  292  su - linuxadminuser
  293  clear
  294  passwd linuxadminuser
  295  exit
  296  passwd devopsadmin
  297  clear
  298  useradd jenkinsadmin
  299  passwd jenkinsadmin
  300  cd /
  301  ls
  302  cd ~
  303  ls
  304  pwd
  305  clear
  306  pwd
  307  su - linuxadminuser
  308  ls
  309  cd dir1/
  310  ls
  311  cd sdir2/
  312  pwd
  313  ls
  314  pwd
  315  cd ~
  316  ls
  317  pwd
  318  clear
  319  ls
  320  cd /
  321  ls
  322  cd /
  323  ls
  324  pwd
  325  cd home/
  326  cd .
  327  cd ..
  328  ls
  329  ll
  330  passwd ec2-user
  331  cat /etc/passwd
  332  clear
  333  cd /etc
  334  ls
  335  clear
  336  cd ..
  337  cd ~
  338  clear
  339  su - devopsadmin
  340  exit
  341  ls -a
  342  exit
  343  clear
  344  ls -a
  345  cd .ssh/
  346  ll
  347  cat authorized_keys
  348  clear
  349  su - devopsadmin
  350  history


Summary :::
 		File and Dir. --> ll Command
	d read, write, execute 
	
	Created User - useradd user1
	go to home dir
	create key pair
	ssh-keygen
	creates : id_rsa id_rsa.pub



#############
1st May. 2023
#############

	Working with SSH Keys
		Public and Private Keys
	Password based authentication
	Passwordless Authentication

Remote Servers :::	
	Valid UserID
	Password/key/token
	Passwordless auth.

	The Tool Specific userID
		jenkins 

	key based authentication
	passwordless authentication


	Server1 
		ssh-keys
			public & private
	Client1
		
		authorized_keys


	Client1 
		user - devopsuser1
		passwd - devopsuser1

	Serve1
		user - devopsadmin
		ssh-keys
			id_rsa 	   - private
			id_rsa.pub - public key


	cat id_rsa.pub > authorized_keys

		ssh_copy_id






Use Cases :::
 1 - Server1	

	RemoteServer1  - Ansible	create sshkeys - private key & public key

		ClientMachine1. install git, mvn. public key(authroized_keys)
		ClientMachine2. install git, mvn. public key(authroized_keys)
		ClientMachine3. install git, mvn. public key(authroized_keys)
	
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#Login to Client Machine. Perform below activities:

#Add User in Client Machine : 

sudo -i

useradd -m -d /home/devopsuser1 devopsuser1
#(or)
useradd devopsuser1

passwd devopsuser1

#Enter New Password:
#Confirm Password:

#Goto:

vi /etc/ssh/sshd_config

#Enable Password Authentication to Yes and save the file
#Execute Below command to update the changes.

service sshd reload

su - devopsuser1

ls -a 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#Login to Server:

#Add User in Server Machine : 

sudo -i

useradd -m -d /home/devopsadmin devopsadmin
#(or)
useradd devopsadmin

su - devopsadmin

ssh-keygen

ssh-copy-id devopsuser1@172.31.6.133

#Type yes for confirmation
#Enter the password for devopsuser1

#### Verify the key copied in Server under /home/devopsuser1/.ssh/

ssh devopsuser1@172.31.6.133
